#!/bin/bash
# Name: Jeffrey Schachtsick
# Course: CS344 - Operating Systems 1
# Assignment: Program 1
# Last Update: 04/01/2016
# Program Overview: This program is to take as an input either a file or standard input
#      with numbers, read all the values into rows and columns, process statistics
#      as either rows or columns to calculate the average and median, and all errors
#      (if any) or statistics are reported as standard output to display for user.
# THIS IS A TEST SCRIPT - JUST TO SEE IF I CAN ADEQUATELY READ-IN A FILE and output it.

# Get a count of number of rows
rows=0

# read each line by the row in the file
# partial credit for IFS function and read found in stackoverflow.com/questions/973602/bash-read-tab-separated-file-line-into-array
while IFS=$'\t' read -r -a myLine
do
	#count the rows
	rows=`expr $rows + 1`
	echo "Row $rows: "
	columns=0
	sum=0
	# Decision to make a new array or go with existing arrays	
	if [ $rows -eq 1 ]
	then
		echo "This is the first row"
		# get the values for each element in the first row
		for i in "${myLine[@]}"
		do
			TMP=colTemp$columns
			# Add the value to temp file
			echo -n "$i" > "$TMP"
			numCol=$columns
			columns=`expr $columns + 1`
		done
	else
		# Here I want to put each subsequent value in the column into a row in the column temp file
		echo "After the first row"
		# Keep the number of columns value
		columns=0
		# Read each item
		for j in "${myLine[@]}"
		do
			TMP=colTemp$columns
			# Without adding a new line, insert value to temp file
			echo -e -n "\t$j" >> "$TMP"
			# Make a new line if this is the last column for easier printing
			if [ $columns -eq $numCol ]
			then
				echo -e "" >> "$TMP$$"
			fi
			columns=`expr $columns + 1`
		done
	fi
done <$1
echo "Number of rows: $rows"
echo "Number of columns: $numCol"
# Using the cat comand to each temp file, copy contents of each to a main temp file.
COUNTER=0
while [ $COUNTER -le $numCol ]
do
	filename="colTemp$COUNTER"
	COUNTER=`expr $COUNTER + 1`
	echo $filename
	cat $filename >> tempFile
	echo -e "" >> tempFile
	rm -f $filename
done
